local EatDrywallHack = Instance.new("ScreenGui")
local TextButton = Instance.new("TextButton")


EatDrywallHack.Name = "Eat Drywall Hack"
EatDrywallHack.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
EatDrywallHack.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

TextButton.Parent = EatDrywallHack
TextButton.BackgroundColor3 = Color3.fromRGB(126, 97, 72)
TextButton.BorderColor3 = Color3.fromRGB(88, 75, 52)
TextButton.BorderSizePixel = 6
TextButton.Position = UDim2.new(0.403335869, 0, 0.431345344, 0)
TextButton.Size = UDim2.new(0, 200, 0, 50)
TextButton.ZIndex = 0
TextButton.Font = Enum.Font.SourceSansBold
TextButton.Text = "Auto Farm"
TextButton.TextColor3 = Color3.fromRGB(203, 82, 42)
TextButton.TextSize = 38.000


local function YVMN_fake_script()
	local script = Instance.new('LocalScript', TextButton)

	local UIS = game:GetService('UserInputService')
	local frame = script.Parent
	
	local dragToggle = nil
	local dragSpeed = 0.01
	local dragStart = nil
	local startPos = nil
	
	local function updateInput(input)
		local delta = input.Position - dragStart
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y) 
		game:GetService('TweenService') :Create(frame, TweenInfo.new(dragSpeed), {Position = position}) :Play()
	end
	
	frame.InputBegan:Connect(function(input)
		if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
			dragToggle = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false
				end
			end)
		end
	end)
	
	UIS.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			if dragToggle then
				updateInput(input)
			end
		end
	end)
	
end
coroutine.wrap(YVMN_fake_script)()
local function XMCJC_fake_script()
	local script = Instance.new('LocalScript', TextButton)

	
	local button = script.Parent
	local isActive = false
	
	local function toggleScript()
		isActive = not isActive
	
		if isActive then
			button.TextColor3 = Color3.fromRGB(103, 203, 75)
		else
			button.TextColor3 = Color3.fromRGB(203, 82, 42)
		end
	end
	
	button.MouseButton1Click:Connect(toggleScript)
end
coroutine.wrap(XMCJC_fake_script)()
local function RTPAG_fake_script()
	local script = Instance.new('LocalScript', TextButton)

	local button = script.Parent
	local isActive = false
	local player = game:GetService("Players").LocalPlayer
	
	local function toggleScript()
		isActive = not isActive
	
		if isActive then
			while isActive do
				local drywalls = game:GetService("Workspace").House1.Drywall:GetChildren()
				local randomDrywall = drywalls[math.random(1, #drywalls)]
	
				local player = game:GetService("Players").LocalPlayer
	
				if player and randomDrywall then
					local args = {
						[1] = randomDrywall.Position,
						[2] = player.Character.HumanoidRootPart.Position
					}
	
					player.Character.HumanoidRootPart.CFrame = CFrame.new(randomDrywall.Position)
					game:GetService("ReplicatedStorage"):WaitForChild("DrywallClicked"):FireServer(unpack(args))
					wait(0.01)
				end
			end
			
	
		else
			player.Character.HumanoidRootPart.CFrame = CFrame.new(player.Character.HumanoidRootPart.Position)
		end
	end
	
	button.MouseButton1Click:Connect(toggleScript)
end
coroutine.wrap(RTPAG_fake_script)()
local function NDYCKZ_fake_script()
	local script = Instance.new('LocalScript', TextButton)

	local function checkForSeats(parent)
		for _, child in ipairs(parent:GetChildren()) do
			if child:IsA("Seat") then
				child:Destroy()
			end
			checkForSeats(child)
		end
	end
	
	checkForSeats(game:GetService("Workspace"))
end
coroutine.wrap(NDYCKZ_fake_script)()
